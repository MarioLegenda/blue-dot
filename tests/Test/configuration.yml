configuration:
    connection:
        host: localhost
        database_name: world
        user: 'root'
        password: ''
    # optional
    simple:
         # if simple is provided, optional
        select:
            # if select if provided, mandatory
            single_city:
                sql: "SELECT * FROM city WHERE Name = :name AND CountryCode = :country_code"
                parameters: [name, country_code]
            entire_world:
                sql: "SELECT * FROM city"
        insert:
            single_village:
                sql: "INSERT INTO village (name, country) VALUES (:name, :country)"
                parameters: [name, country]
        update:
            single_city:
                sql: "UPDATE village SET name = :update_name WHERE id = :id"
                parameters: [update_name, id]

        delete:
            single_city:
                sql: "DELETE FROM village WHERE id = :id"
                parameters: [id]
    scenario:
        insert_user:
            atomic: true
            return_entity: [select_user.id, "select_user.name  as   user_name", "select_user.lastname  as   user_lastname", get_address_by_id]
            statements:
                insert_user:
                    sql_type: insert
                    sql: "INSERT INTO user (name, lastname, occupation) VALUES (:name, :lastname, :occupation)"
                    use:
                        statement_name: select_user
                        values: {select_user.name : name, select_user.lastname : lastname}
                    parameters: [occupation]
                select_user:
                    sql_type: select
                    sql: "SELECT * FROM user WHERE id = :id"
                    parameters: [id]
                insert_address:
                    sql_type: insert
                    sql: "INSERT INTO address (user_id, city, address) VALUES (:user_id, :city, :address)"
                    foreign_key:
                        statement_name: insert_user
                        bind_to: user_id
                    parameters: [city, address]
                get_address_by_id:
                    sql_type: select
                    sql: "SELECT * FROM address WHERE id = :id"
                    foreign_key:
                        statement_name: insert_address
                        bind_to: id

    callable:
        validate_user:
            type: object # or symfony service
            name: Test\CallableService